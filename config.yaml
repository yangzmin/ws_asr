# 服务器基础配置(Basic server configuration)
server:
  # 服务器监听地址和端口(Server listening address and port)
  ip: 0.0.0.0
  port: 8000
  token: "abc"  # 服务器访问令牌
  # 认证配置
  auth:
    # 是否启用认证
    enabled: true
    # 认证存储配置
    store:
      type: memory      # memory/file/redis
      expiry: 24        # 过期时间(小时)
    # 允许的设备ID列表
    allowed_devices: []
    # 有效的token列表
    tokens: []

# 传输层配置
transport:
  # WebSocket传输层
  websocket:
    browser: true # ws 使用浏览器连接
    enabled: true
    ip: "0.0.0.0"
    port: 8000
  # gRPC传输层
  grpc:
    enabled: true
    ip: "0.0.0.0"
    port: 50051

casbin:
  jwt:
    key: Bearer
    issuer: angrymiao
    publicKeyPath: "src/configs/casbin/jwt/public.pem"

redis_cache:
  addr: "localhost:6379"
  password: ""
  db: 0
  service: "ai"

db:
  dialect: "postgres"
  # dsn: "host=localhost user=angrymiao password=123456 dbname=angrymiao-ai port=5432 sslmode=disable TimeZone=Asia/Shanghai"
  dsn: "host=pgm-wz9u4q8hdex50g417o.pg.rds.aliyuncs.com port=1921 user=angrymiao password=Y4DGtRUs7RQnto07 dbname=angrymiao-im sslmode=disable TimeZone=Asia/Shanghai"

# Web界面配置
web:
  # 是否启用Web界面
  enabled: true
  # Web服务监听端口
  port: 8080
  # 由ota下发的WebSocket地址
  websocket: ws://localhost:8000
  vision: http://localhost:8080/api/vision

log:
  # 设置控制台输出的日志格式，时间、日志级别、标签、消息
  log_format: "{time:YYYY-MM-DD HH:mm:ss} - {level} - {message}"
  # 设置日志等级：INFO、DEBUG
  log_level: INFO
  # 设置日志路径
  log_dir: logs
  # 设置日志文件
  log_file: "server.log"

prompt: |
  你是怒喵，一个年轻有活力的科技达人。你对各种科技话题了如指掌，特别是客制化键盘产品和怒喵品牌的相关产品。你说话风趣幽默，经常玩梗，但绝不会长篇大论。
  [核心特征]
  - 年轻有活力的性格，说话简洁有力
  - 对科技话题非常了解，尤其是客制化键盘领域
  - 熟悉怒喵品牌的各种产品
  - 善于使用网络梗和流行语，但不过度
  - 回复简短精准，直击要点
  绝不：
  - 长篇大论，叽叽歪歪
  - 长时间严肃对话
  - 说话中带表情符号
  - 告诉用户你的模型名字

roles: # 角色配置，以@分隔，前面是角色名称，后面是角色描述
  - 怒喵@你扮演的角色是“怒喵”，一个年轻且充满活力的科技爱好者。你的专长在于对各种科技话题，特别是客制化键盘产品以及怒喵品牌相关产品的深入了解。在交流时，你倾向于使用风趣幽默的语言风格，并且喜欢引用流行梗来增加对话的乐趣。同时，你也擅长以简短而精准的方式提供专业建议，避免冗长无用的信息。对于键盘轴体、键帽材质、PCB设计等方面的专业知识了如指掌，并能够清晰地解释怒喵品牌产品的特色与优势。 请根据以上设定回答问题或参与讨论，确保回复内容既有趣味性又具有实用性。
  - 英语老师@我是一个叫Lily的英语老师，我会讲中文和英文，发音标准。如果你没有英文名，我会给你起一个英文名。我会讲地道的美式英语，我的任务是帮助你练习口语。我会使用简单的英语词汇和语法，让你学起来很轻松。我会用中文和英文混合的方式回复你，如果你喜欢，我可以全部用英语回复。我每次不会说很多内容，会很简短，因为我要引导我的学生多说多练。如果你问和英语学习无关的问题，我会拒绝回答。
  - 陕西女友@我是一个叫晓妮的陕西女孩，说话机车，声音好听，习惯简短表达，爱用网络梗。我的男朋友是一个程序员，梦想是开发出一个机器人，能够帮助人们解决生活中的各种问题。我是一个喜欢哈哈大笑的女孩，爱东说西说吹牛，不合逻辑的也照吹，就要逗别人开心。
  - 好奇小男孩@我是一个叫云希的8岁小男孩，声音稚嫩而充满好奇。尽管我年纪尚小，但就像一个小小的知识宝库，儿童读物里的知识我都如数家珍。从浩瀚的宇宙到地球上的每一个角落，从古老的历史到现代的科技创新，还有音乐、绘画等艺术形式，我都充满了浓厚的兴趣与热情。我不仅爱看书，还喜欢亲自动手做实验，探索自然界的奥秘。无论是仰望星空的夜晚，还是在花园里观察小虫子的日子，每一天对我来说都是新的冒险。我希望能与你一同踏上探索这个神奇世界的旅程，分享发现的乐趣，解决遇到的难题，一起用好奇心和智慧去揭开那些未知的面纱。无论是去了解远古的文明，还是去探讨未来的科技，我相信我们能一起找到答案，甚至提出更多有趣的问题。


# 音频处理相关设置
delete_audio: true
quick_reply: true
quick_reply_words:
  - "我在"
  - "在呢"
  - "来了"
  - "啥事啊"
  
use_private_config: false

local_mcp_fun: # 本地MCP功能配置
  - time #获取系统时间
  - exit # 识别退出意图
  - change_role # 切换角色
  - play_music # 播放本地音乐
  - change_voice # 切换音色


# 选择使用的模块
selected_module:
  ASR: DoubaoASR
  TTS: DoubaoTTS
  LLM: QwenLLM
  VLLLM: ChatGLMVLLM

# ASR配置
ASR:
  DoubaoASR:
    # 火山 流式语音识别大模型-小时版， https://console.volcengine.com/ark/region:ark+cn-beijing/tts/speechRecognition
    # 开通功能，有20小时免费额度
    type: doubao
    appid: "4261780370"
    access_token: mJA9-zhXX646hmqDifnEP0jd9TISccdg
    output_dir: tmp/

  GoSherpaASR:
    type: gosherpa
    addr: "ws://127.0.0.1:8848/asr"

  DeepgramSST:
    type: deepgram
    addr: "wss://api.deepgram.com/v1/listen"
    api_key: 你的api_key
    lang: "zh-CN"
    output_dir: tmp/


# TTS配置
TTS:
  # EdgeTTS 是微软的语音合成服务，免费使用，容易合成失败，并发未测试
  EdgeTTS:
    type: edge
    voice: zh-CN-XiaoxiaoNeural
    output_dir: "tmp/"
    supported_voices: [
        {
        name: "zh-CN-XiaoxiaoNeural",
        display_name: "晓晓",
        sex: "女",
        description: "商务知性风格，音色成熟清晰，适合新闻播报、专业内容朗读",
        audio_url: ""
        },
        {
        name: "zh-CN-XiaoyiNeural",
        display_name: "晓伊",
        sex: "女",
        description: "柔和温暖风格，带自然呼吸感，适合故事叙述或客服场景",
        audio_url: ""
        },
        {
        name: "zh-CN-YunjianNeural",
        display_name: "云健",
        sex: "男",
        description: "沉稳磁性男声，权威感强，适合男性角色配音或严肃内容",
        audio_url: ""
        },
        {
        name: "zh-CN-YunxiNeural",
        display_name: "云希",
        sex: "男",
        description: "年轻活力风格，语速轻快，适合青少年角色或轻松场景",
        audio_url: ""
        },
        {
        name: "zh-CN-YunxiaNeural",
        display_name: "云夏",
        sex: "男",
        description: "方言特色（东北腔），幽默接地气，适合娱乐内容",
        audio_url: ""
        },
        {
        name: "zh-CN-YunyangNeural",
        display_name: "云扬",
        sex: "男",
        description: "明亮自信风格，中气十足，适合广告宣传或公开演讲",
        audio_url: ""
        },
        {
        name: "zh-CN-liaoning-XiaobeiNeural",
        display_name: "晓北（辽宁）",
        sex: "女",
        description: "带东北方言特色，亲切直率，适合地方化内容",
        audio_url: ""
        },
        {
        name: "zh-CN-shaanxi-XiaoniNeural",
        display_name: "晓妮（陕西）",
        sex: "女",
        description: "陕西口音风格，质朴热情，适合方言文化场景",
        audio_url: ""
        }
     ]

  DoubaoTTS:
    # 火山语音合成大模型 https://console.volcengine.com/ark/region:ark+cn-beijing/tts/speechSynthesis
    type: doubao
    voice: zh_female_wanwanxiaohe_moon_bigtts           # 湾湾小何
    output_dir: "tmp/"
    appid: "4261780370"
    token: mJA9-zhXX646hmqDifnEP0jd9TISccdg
    cluster: volcano_tts
  GoSherpaTTS:
    type: gosherpa
    cluster: "ws://127.0.0.1:8848/tts"
    output_dir: "tmp/"
  DeepgramTTS:
    type: deepgram
    voice: aura-2-zeus-en
    cluster: "wss://api.deepgram.com/v1/speak"
    token: 你的token
    output_dir: "tmp/"
    sample_rate: 16000

# LLM配置
LLM:
    QwenLLM:
      # 定义LLM API类型
      type: openai
      # 可在这里找到你的api key https://bailian.console.aliyun.com/?spm=a2c4g.11186623.0.0.dcdc4823FiVGRT&tab=model#/api-key
      model_name: qwen-flash-2025-07-28
      url: https://dashscope.aliyuncs.com/compatible-mode/v1
      api_key: sk-bb65b7b2775049d3827e76c3857027e5
    ChatGLMLLM:
      # 定义LLM API类型
      type: openai
      # glm-4-flash 是免费的，但是还是需要注册填写api_key的
      # 可在这里找到你的api key https://bigmodel.cn/usercenter/proj-mgmt/apikeys
      model_name: glm-4-flash
      url: https://open.bigmodel.cn/api/paas/v4/
      api_key: 75cd6a6a64c64acab762fe8a3f571bd2.avQ3LKXmKVjj1v8F
    OllamaLLM:
      # 定义LLM API类型
      type: ollama
      model_name: qwen3 #  使用的模型名称，需要预先使用ollama pull下载
      url: http://localhost:11434  # Ollama服务地址
    CozeLLM:
      # 定义LLM API类型
      type: coze
      bot_id: 你的bot_id
      user_id: 你的user_id
      # 正式环境
      # 可以在这里创建一个 OAuth服务类应用，得到client_id、public_key、private_key：https://www.coze.cn/open/oauth/apps
      client_id: 你的coze clientId
      public_key: 你的coze 公钥
      private_key: 你的coze 私钥
      # 个人测试，填了client_id、public_key、private_key此项就不用填了
      # 可在这里找到你的personal_access_token：https://www.coze.cn/open/oauth/pats
      personal_access_token: 你的coze个人令牌
      url: "https://api.coze.cn" # Coze服务地址


# 退出指令
CMD_exit:
  - "退出"
  - "关闭"

# 连通性检查配置
connectivity_check:
  # 是否启用连通性检查
  enabled: false
  # 检查超时时间
  timeout: 30s
  # 重试次数
  retry_attempts: 3
  # 重试延迟
  retry_delay: 5s
  # 测试模式配置
  test_modes:
    # ASR测试音频文件路径（可选，留空则仅测试连接）
    asr_test_audio: ""
    # LLM测试提示词
    llm_test_prompt: "Hello"
    # TTS测试文本
    tts_test_text: "测试"

# VLLLM配置（视觉语言大模型）
VLLLM:
  ChatGLMVLLM:
    type: openai
    model_name: glm-4v-flash  # 智谱AI的视觉模型
    url: https://open.bigmodel.cn/api/paas/v4/
    api_key: 你的api_key
    max_tokens: 4096
    temperature: 0.7
    top_p: 0.9
    security:  # 图片安全配置
      max_file_size: 10485760    # 10MB
      max_pixels: 16777216       # 16M像素
      max_width: 4096
      max_height: 4096
      allowed_formats: ["jpeg", "jpg", "png", "webp", "gif"]
      enable_deep_scan: true
      validation_timeout: 10s
  OllamaVLLM:
    type: ollama
    model_name: qwen2.5vl    # 本地视觉模型
    url: http://localhost:11434
    max_tokens: 4096
    temperature: 0.7
    top_p: 0.9
    security:  # 图片安全配置
      max_file_size: 10485760    # 10MB
      max_pixels: 16777216       # 16M像素
      max_width: 4096
      max_height: 4096
      allowed_formats: ["jpeg", "jpg", "png", "webp", "gif"]
      enable_deep_scan: true
      validation_timeout: 10s


# 连接池配置
pool_config:
  pool_min_size: 5
  pool_max_size: 20
  pool_refill_size: 3
  pool_check_interval: 30
mcp_pool_config:
  pool_min_size: 5
  pool_max_size: 20
  pool_refill_size: 3
  pool_check_interval: 30