syntax = "proto3";

package ai_service;

option go_package = "xiaozhi-grpc-proto/generated/go/ai_service";

// AI服务定义
service AIService {
  // 双向流聊天接口
  rpc ChatStream(stream ChatRequest) returns (stream ChatResponse);
  
  // 健康检查
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// 聊天请求消息
message ChatRequest {
  // 会话ID
  string session_id = 1;
  
  // 设备ID
  string device_id = 2;
  
  // 客户端ID
  string client_id = 3;
  
  // 消息类型
  int32 message_type = 4;
  
  // 消息数据（JSON格式）
  bytes message_data = 5;
  
  // 时间戳
  int64 timestamp = 6;
}

// 聊天响应消息
message ChatResponse {
  // 会话ID
  string session_id = 1;
  
  // 响应类型
  int32 response_type = 2;
  
  // 响应数据（JSON格式）
  bytes response_data = 3;
  
  // 时间戳
  int64 timestamp = 4;
}

// 健康检查请求
message HealthCheckRequest {
  string service = 1;
}

// 健康检查响应
message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}